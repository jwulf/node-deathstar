{
  "name": "pressgang-rest",
  "version": "0.0.5",
  "description": "A high level library for REST communication with a PressGang Component Content Management System (CCMS) Server",
  "main": "index.js",
  "scripts": {
    "test": "jasmine-node tests/dry-tests.spec.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jwulf/node-pressgang-rest.git"
  },
  "keywords": [
    "pressgang",
    "rest"
  ],
  "author": {
    "name": "Joshua Wulf"
  },
  "license": "BSD",
  "dependencies": {
    "restler": "~2.0.1"
  },
  "directories": {
    "doc": ".",
    "test": null,
    "example": null
  },
  "readme": "#node-pressgang-rest\n\nA node module that provides a REST client library for the PressGang CCMS. It provides a more semantic interface for application development than the raw PressGang REST interface. Uses restler for the REST interface.\n\n##Installation\n\n```bash\nnpm install pressgang-rest\n```\n## Basic Usage\n\nFirst, require `pressgang-rest`:\n\n```js\nvar PressGangCCMS = require('pressgang-rest').PressGangCCMS;\n```\nNext, create a new PressGangCCMS object:\n\n```js\nvar pressgang = new PressGangCCMS('http://127.0.0.1:8080/TopicIndex');\n```\n\nNow, you can get the XML of a topic:\n\n```js\npressgang.getTopicData('xml', 8445, \n\tfunction(err, result){\n\t\tconsole.log('The topic xml content is:' + result);\n\t});\n```\n\nTo get the JSON representation of a topic:\n\n```js\npressgang.getTopicData('json', 8445, \n\tfunction(err, result){\n\t\tconsole.log('The JSON representation of the topic is:' \n\t\t+ JSON.Stringify(result);\n\t});\n```\n\nTo get a specific revision of a topic:\n\n```js\npressgang.getTopicData('json', 8445, 10405, \n    function(err, result){\n\t\tconsole.log('The XML of revision 10405 is:' \n\t\t+ result.xml;\n\t});\n```\n\n`isContentSpec` will return true if an ID is a Content Specification:\n\n```js\npressgang.isContentSpec(456, \n\tfunction(err, is){\n\t\tif (is) console.log('Topic 456 is a Content Specification')\n\t});    \n```\n\n`getContentSpec` returns a Content Spec object, which has the plain text content of the Content Spec, and a metadata record.\n```js\npressgang.getContentSpec(456, \n    function(err, result){\n\t\tconsole.log(result.spec); // Plain-text of the spec\n        console.log(result.metadata); // All the spec metadata in an object\n\t});    \n```\n\nYou can change the logging level of the PressGangCCMS Object to get details for debugging. The `loglevel` defaults to 0. Higher levels produce more trace output on the console:\n\n```js\npressgang.loglevel = 2;\n```\n\n##Source Code\nThe source is hosted on github at https://github.com/jwulf/node-pressgang-rest.\n\nIt's written using Microsoft TypeScript, and compiled to JavaScript using the node typescript module. There is a TypeScript declaration file in the module.\n",
  "readmeFilename": "README.md",
  "_id": "pressgang-rest@0.0.5",
  "dist": {
    "shasum": "9b95d752bbdde6b2bf2ff2aad4db8e67ce8068e6"
  },
  "_from": "pressgang-rest@~0.0.4"
}
